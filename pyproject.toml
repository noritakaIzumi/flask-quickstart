[tool.poetry]
name = "flask-quickstart"
version = "0.1.0"
description = "My first app by Flask."
authors = ["Noritaka IZUMI <noritaka.izumi@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "flask_quickstart" }]
package-mode = false

[tool.poetry.dependencies]
python = "^3.8.1"  # for flake8 6.0.0
poetry = "1.8.2"
poethepoet = "^0.21.1"
flask = "3.0.2"
python-dotenv = "^1.0.0"
gevent = "^23.7.0"
schema = "^0.7.5"
jsonschema = "^4.19.1"
jsonref = "^1.1.0"
gunicorn = "^22.0.0"

[tool.poetry.group.dev.dependencies]
pip-autoremove = "^0.10.0"
watchdog = "^3.0.0"
pysen = "0.10.5"
black = "^23.7.0"
flake8 = "^6.0.0"
isort = "^5.12.0"
mypy = "^1.4.1"
pytest = "^7.4.0"
djlint = "^1.32.1"
bandit = "^1.7.5"
beautifulsoup4 = "^4.12.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# scripts
[tool.poe.tasks]
start = "flask run"
debug = "poe start --debug"
lint = ["lint-py", "lint-html"]
lint-py = ["lint-py-style", "lint-py-bandit"]
lint-py-style = "pysen run lint"
lint-py-bandit = "bandit -c pyproject.toml -r app"
lint-html = "djlint ./app/templates"
format = ["format-py", "format-html"]
format-py = "pysen run format"
format-html = "poe lint-html --reformat --warn"
test = "pytest"

# pysen
[tool.pysen]
version = "0.10"

[tool.pysen.lint]
enable_black = true
enable_flake8 = true
enable_isort = true
enable_mypy = true
mypy_preset = "strict"
line_length = 119
py_version = "py311"
[[tool.pysen.lint.mypy_targets]]
paths = ["./app", "./tests"]
[tool.pysen.lint.source]
includes = ["./app", "./tests"]

[tool.djlint]
profile = "jinja"
format_css = true
format_js = true

[tool.djlint.css]
indent_size = 4

[tool.djlint.js]
indent_size = 4

[tool.bandit]

# pytest
[tool.pytest.ini_options]
testpaths = [
    "tests"
]
