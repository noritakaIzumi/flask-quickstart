name: E2E Tests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    uses: ./.github/workflows/python-venv.yml
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      # setup python
      - name: Load python venv
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ needs.build.outputs.cache-key }}
      - name: Activate python venv
        run: |
          . ./.venv/bin/activate
          echo "PATH=$PATH" >> "$GITHUB_ENV"
      # setup node.js
      - uses: actions/setup-node@v3
        id: setup-node
        with:
          node-version: 18
          cache: npm
      - name: Load node modules
        id: load-node-modules
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: ${{ steps.setup-node.outputs.cache-hit != 'true' }}
        run: npm ci
      - name: Export Playwright browsers path
        run: echo "PLAYWRIGHT_BROWSERS_PATH=$HOME/pw-browsers" >> "$GITHUB_ENV"
      # setup playwright browsers
      - id: playwright-config-hash
        run: echo "value=${{ hashFiles('**/playwright.config.ts') }}" >> "$GITHUB_OUTPUT"
      - name: Load Playwright browsers cache
        id: load-playwright-browsers-cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: playwright_browsers_cache-${{ runner.os }}-${{ steps.playwright-config-hash.outputs.value }}
      - name: Load Playwright browsers
        id: load-playwright-browsers
        uses: actions/cache@v3
        with:
          path: ${{ env.PLAYWRIGHT_BROWSERS_PATH }}
          key: playwright_browsers-${{ runner.os }}-${{ steps.playwright-config-hash.outputs.value }}
      - name: Install Playwright Browsers
        if: ${{ steps.load-playwright-browsers-cache.outputs.cache-hit != 'true' || steps.load-playwright-browsers.outputs.cache-hit != 'true' }}
        run: npx playwright install --with-deps
      - run: ls -la ~/.cache; exit 1
      # run tests
      - name: Run E2E tests
        run: npm run test:e2e
      # report
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
